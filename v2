import re
# by Zeno Pelgrims 
# modified by mpowers
# only change these variables
filename_input = "\"Q:\\YourFile_Noice_Input####.exr\""
filename_output = "\"Q:\\YourFileOutput_denoiced####.exr\""
arnold_bin_path = "C:\\ProgramData\\Autodesk\\ApplicationPlugins\\MAXtoA"
startframe = 0
endframe = 180
variance = 0.5
threads = -2
pixel_search_radius = 9
pixel_neighborhood_patch_radius = 3
temporal_range = 2
light_aov_names = [] # if no light aov denoising needed, just leave list empty: [] - ["frontlight", "backlight"]



filename_input_sequence_number = re.sub(r'#+',lambda m: r'{{:0{}d}}'.format(len(m.group(0))), filename_input)
filename_output_sequence_number = re.sub(r'#+',lambda m: r'{{:0{}d}}'.format(len(m.group(0))), filename_output)

for i in range (startframe, endframe + 1):
    temporal_range_string = ""
    light_aov_string = ""
    for j in range(-temporal_range/2, temporal_range):  
        if (j==0) or (i+j < startframe ) or (i+j > endframe + 2):
            continue            
        #print "i is " , i , "j is " , j
        temporal_range_string += filename_input_sequence_number.format(i+j) + " "

    for k in light_aov_names:
        light_aov_string += "-aov " + str(k) + " "
    
    print arnold_bin_path + "/noice.exe " \
        + "-i " + filename_input_sequence_number.format(i) + " " \
        + temporal_range_string + " " \
        + "-o "  + filename_output_sequence_number.format(i) + " " \
        + "-pr "  + str(pixel_neighborhood_patch_radius) + " " \
        + "-sr " + str(pixel_search_radius) + " " \
        + "-v "  + str(variance) + " " \
        + "-t "  + str(threads) + " " \
            
    if i is not endframe:
      print "",



#   noice 5.2.2.1 [2dff6c07] - the Arnold denoiser
#   Unrecognized option -p
#   Usage:  noice [options] ...
#       -i,    --input %s           Input image, multiple images can be included for stability, only first input image will be denoised
#       -ef,   --extraframes %d     Number of frames to pad before and after for temporal stability (0 - 2, default:0)
#       -f,    --frames %d          Number of frames to denoise in the sequence (default:1)
#       -fe,   --feature %s         Use this AOV as a denoising feature
#       -pr,   --patchradius %d     Neighborhood patch radius, size of pixel neighborhood to compare (0 - 6, default:3)
#       -sr,   --searchradius %d    Search radius, higher values mean a wider search for similar pixel neighborhoods (6 - 21, default:9)
#       -v,    --variance %f        Variance threshold, higher values mean more aggressive denoising (0.0 - 1.0, default:0.25)
#       -l,    --aov %s             Light AOV name to be co-denoised, multiple can be specified
#       -o,    --output %s          Output image
#      -t,    --threads %d         Number of threads (0: use all cores, negative numbers specify number of idle cores)
#      -n,    --notices            Print copyright notices
#
#   2. Supply you own file path for the following:
#       filename_input = "\"yourFilePath\\yourFileName_Noice_Input0000.exr\""
#       filename_output = "\"yourFilePath\\yourFileName_denoiced.#####.exr\""
#   arnold_bin_path = "C:\\ProgramData\\Autodesk\\ApplicationPlugins\\MAXtoA"
#   3. On Windows, try modifying the file string thus:
#       filename_input = "\"Q:\!resource\\footage\\vr_camera_longer\\vr_camera_longer_Noice_Input0000.exr\""
#       Adding the escape character \ before other \'s and " 's - easy to do with find/replace. Also, don't use the file string generated by the 3ds MAX built-in denoiser, as it use the forward slash / in the file path. It is Arnolds' lack of attention to details like this and overall unhelpful help that I find annoying. It is impactful on our shop's ability to be productive with their render "solution"
#   4. The run the module from python. Copy the output.
#   5. Save it as a batch file (myoutpstring.bat) and run it out of a command shell.
